const NumberCount=function(option){if(!option.element||!this.isDOMElement(option.element))throw"DOMElement error";if(this.element=option.element,this.total=0,!option.to||"number"!=typeof option.to)throw'Invalid type of "number" expected, Received "'+typeof option.to+'" instead';if(this.to=option.to,this.delay=option.delay||Math.floor(40*Math.random()+40),this.range=0,this.interval=null,this.incrementl=0,this.prefix=1,this.float_num=20,option.onRenderStart){if("function"!=typeof option.onRenderStart)throw'Invalid type of "function" expected, Received "'+typeof option.to+'" instead';this.onRenderStart=option.onRenderStart}else this.onRenderStart=null;if(option.onRenderEnd){if("function"!=typeof option.onRenderEnd)throw'Invalid type of "function" expected, Received "'+typeof option.to+'" instead';this.onRenderEnd=option.onRenderEnd}else this.onRenderEnd=null;this.init()};NumberCount.prototype={constructor:NumberCount,init(){this.range=this.getRange(),this.render()},render(){this.onRenderStart&&this.onRenderStart(),this.interval=setInterval(()=>{this.incrementl+=this.range,this.incrementl>=Math.abs(this.to)&&(clearInterval(this.interval),this.incrementl=this.to,this.onRenderEnd&&this.onRenderEnd(),this.total+=this.to,this.to=0,this.range=0,this.incrementl=0),this.element.innerHTML=this.formate(this.total+this.incrementl*this.prefix)},this.delay)},rise(num){if("number"!=typeof num)throw'Invalid type of "number" expected, Received "'+typeof num+'" instead';this.prefix=num>0?1:-1,this.to=num,this.range=this.getRange(),this.render()},formate:num=>num.toLocaleString(),getRange(){let _to=Math.abs(this.to);return _to>=this.float_num?Math.floor(_to/this.float_num*Math.random()+_to/this.float_num/2):1},isDOMElement:obj=>!(!obj||"undefined"==typeof window||obj!==window&&!obj.nodeType)};